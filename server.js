const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { Telegraf, Markup } = require('telegraf');
const { google } = require('googleapis');
const path = require('path');
const dotenv = require('dotenv');
const { OpenAI } = require("openai");

dotenv.config();
const app = express();
app.use(cors());
app.use(bodyParser.json());

// Telegram bot
const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

// GPT-4o —á–µ—Ä–µ–∑ OpenRouter
const openai = new OpenAI({
  apiKey: process.env.OPENROUTER_API_KEY,
  baseURL: "https://openrouter.ai/api/v1",
  defaultHeaders: {
    "HTTP-Referer": "https://ai24solutions.onrender.com/",
    "X-Title": "AI24SolutionsBot"
  }
});

// Google Sheets
const auth = new google.auth.GoogleAuth({
  keyFile: path.join(__dirname, 'credentials.json'),
  scopes: ['https://www.googleapis.com/auth/spreadsheets']
});
const SPREADSHEET_ID = '1CajOn3ncsj8h21uxAk10XQWJTD40R6195oJKGSQPJaQ';
const SHEET_NAME = '–õ–∏—Å—Ç2';

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = Markup.keyboard([
  ['üí° –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç AI24', 'üìù –ü—Ä–æ–π—Ç–∏ –∫–≤–∏–∑'],
  ['ü§ñ –ó–∞–¥–∞—Ç—å AI-–≤–æ–ø—Ä–æ—Å']
]).resize();

const awaitingAIQuestion = new Set();
let formStep = {};
let formData = {};

bot.start((ctx) => {
  const name = ctx.from.first_name || '–¥—Ä—É–≥';
  ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${name}! üëã\n\n–Ø ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç AI24Solutions. –ü–æ–º–æ–≥–∞—é —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –Ω–µ–π—Ä–æ-—Ä–µ—à–µ–Ω–∏—è–º–∏. –í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å:`, mainMenu);
});

// ==== –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç ====
const assistantOptions = [
  "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
  "–ß–∞—Ç-–±–æ—Ç—ã –∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã",
  "–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º",
  "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ò–ò-—Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥ –∑–∞–¥–∞—á—É",
  "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
];

const assistantResponses = {
  "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤": `üìä –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞—É–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –ø–æ–º–æ–≥–∞–µ–º –≤–Ω–µ–¥—Ä–∏—Ç—å AI —Ç—É–¥–∞, –≥–¥–µ —ç—Ç–æ –¥–∞—ë—Ç –ø—Ä–∏–±—ã–ª—å.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://ai24solutions.ru/audits`,
  "–ß–∞—Ç-–±–æ—Ç—ã –∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã": `ü§ñ –°–æ–∑–¥–∞—ë–º Telegram-–±–æ—Ç–æ–≤, –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤, –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤ –∏ –±–æ—Ç–æ–≤ –¥–ª—è HR/–∑–∞–ø–∏—Å–µ–π.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://ai24solutions.tilda.ws/chat-bots`,
  "–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º": `üéì –ü—Ä–æ–≤–æ–¥–∏–º –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫—É–º—ã –ø–æ ChatGPT, Midjourney, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –∫–æ–¥–∞ –∏ –¥—Ä.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://ai24solutions.ru/educations`,
  "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ò–ò-—Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥ –∑–∞–¥–∞—á—É": `üìà –ü–æ–º–æ–≥–∞–µ–º —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä—É—Ç–∏–Ω—É, –ø–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://ai24solutions.ru/analytics`
};

bot.hears('üí° –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç AI24', async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:', Markup.keyboard(assistantOptions.map(o => [o])).resize());
});

// –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–∑ –º–∞—Å—Å–∏–≤–∞
assistantOptions.forEach(option => {
  bot.hears(option, async (ctx) => {
    const response = assistantResponses[option];
    if (response) await ctx.reply(response);
  });
});

// ==== –ê–Ω–∫–µ—Ç–∞ ====
bot.hears('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', async (ctx) => {
  const id = ctx.from.id;
  formStep[id] = 1;
  formData[id] = {};
  await ctx.reply('1Ô∏è‚É£ –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?');
});

bot.on('text', async (ctx) => {
  const id = ctx.from.id;
  const text = ctx.message.text;

  // AI-–≤–æ–ø—Ä–æ—Å
  if (awaitingAIQuestion.has(id)) {
    awaitingAIQuestion.delete(id);

    try {
      const completion = await openai.chat.completions.create({
        model: "openrouter/gpt-4o",
        messages: [{ role: "user", content: text }]
      });

      const reply = completion.choices[0]?.message?.content || "–û—Ç–≤–µ—Ç –æ—Ç AI –Ω–µ –ø–æ–ª—É—á–µ–Ω.";
      return ctx.reply(reply);
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ AI:", err.message || err);
      return ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  }

  // –ê–Ω–∫–µ—Ç–∞
  if (formStep[id]) {
    if (formStep[id] === 1) formData[id].name = text;
    if (formStep[id] === 2) formData[id].business = text;
    if (formStep[id] === 3) formData[id].goal = text;
    if (formStep[id] === 4) {
      formData[id].contact = text;

      const msg = `üì• –ù–æ–≤—ã–π –ª–∏–¥:\nüë§ –ò–º—è: ${formData[id].name}\nüè¢ –ë–∏–∑–Ω–µ—Å: ${formData[id].business}\nüéØ –ó–∞–¥–∞—á–∞: ${formData[id].goal}\nüì¨ –ö–æ–Ω—Ç–∞–∫—Ç: ${formData[id].contact}`;
      await ctx.reply("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.");
      await bot.telegram.sendMessage(process.env.ADMIN_ID, msg);

      delete formStep[id];
      delete formData[id];
      return;
    }

    formStep[id]++;
    if (formStep[id] === 2) return ctx.reply('2Ô∏è‚É£ –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–∞—à –±–∏–∑–Ω–µ—Å?');
    if (formStep[id] === 3) return ctx.reply('3Ô∏è‚É£ –ö–∞–∫–∞—è –∑–∞–¥–∞—á–∞ —Å—Ç–æ–∏—Ç?');
    if (formStep[id] === 4) return ctx.reply('4Ô∏è‚É£ –ö–æ–Ω—Ç–∞–∫—Ç (Telegram / –ø–æ—á—Ç–∞)');
  }
});

// ==== WebApp-–∫–≤–∏–∑ ====
app.post('/send-results', async (req, res) => {
  const { name, email, answers } = req.body;
  console.log('üì© –ó–∞–ø—Ä–æ—Å –∏–∑ WebApp:', req.body);

  const message = `üì• –ù–æ–≤—ã–π –∫–≤–∏–∑:\nüë§ –ò–º—è: ${name}\nüí¨ Telegram: ${email}\nüß† –û—Ç–≤–µ—Ç—ã:\n${answers.join('\n')}`;

  try {
    await bot.telegram.sendMessage(process.env.ADMIN_ID, message);

    const authClient = await auth.getClient();
    const sheets = google.sheets({ version: 'v4', auth: authClient });
    const now = new Date().toLocaleString('ru-RU');

    await sheets.spreadsheets.values.append({
      spreadsheetId: SPREADSHEET_ID,
      range: `${SHEET_NAME}!A1`,
      valueInputOption: 'USER_ENTERED',
      requestBody: {
        values: [[now, name, email, ...answers]]
      }
    });

    res.status(200).send('OK');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram –∏–ª–∏ Google Sheets:', err);
    res.status(500).send('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
  }
});

// ==== –ö–≤–∏–∑ ====
bot.hears('üìù –ü—Ä–æ–π—Ç–∏ –∫–≤–∏–∑', async (ctx) => {
  await ctx.reply('–û—Ç–∫—Ä–æ–π—Ç–µ –∫–≤–∏–∑ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:', {
    reply_markup: {
      inline_keyboard: [[{ text: 'üöÄ –ü—Ä–æ–π—Ç–∏ –∫–≤–∏–∑', web_app: { url: process.env.WEB_APP_URL } }]]
    }
  });
});

// ==== AI-–≤–æ–ø—Ä–æ—Å ====
bot.hears('ü§ñ –ó–∞–¥–∞—Ç—å AI-–≤–æ–ø—Ä–æ—Å', async (ctx) => {
  awaitingAIQuestion.add(ctx.from.id);
  await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å ‚Äî –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ ü§ñ');
});

// ==== Express —Å—Ç–∞—Ä—Ç ====
app.get('/', (_, res) => res.send('AI24Solutions –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ'));
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`);
});

bot.launch();
console.log('‚úÖ AI24Solutions –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
